################################################
#  GITHUB ACTION WORKFLOW NAME
################################################
name: Deploy to Github Page

################################################
#  GITHUB ACTION EVENT TRIGGER
################################################
on: 
  workflow_dispatch:
  push:
    branches: [ 'master' ]



################################################
#  GITHUB ACTION JOBS
################################################
jobs:
  deploy-to-github-page:
    name: deploy-to-github-page
    runs-on: ubuntu-latest


################################################
#  GITHUB ACTIONS GLOBAL ENV VARIABLES  
################################################
    env:
      ENV : live 
      STACK_NAME: docs


################################################
#  GITHUB REPO CHECKOUT 
################################################
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis


################################################
#  NODE ENV
################################################    
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      

################################################
#  NODE MODULES CACHE  
################################################
      - name: Cache node modules
        uses: actions/cache@v2
        id: cache-node-modules
        env:
          cache-name: cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-


################################################
#  NODE MODULES INSTALL  
################################################
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run:  npm install



####################################################
#  NPM RUN BUILD
####################################################      
      - name: Run bash script
        run: |
          npm run build

####################################################
#  NPM RUN GIT ADD,COMMIT, PUSH
####################################################      
      - name: Run git add, commit and push
        run: |
          mkdir tmp
          git clone --branch gh-pages https://$GITHUB_TOKEN@github.com/intersective/docs.git tmp/
          cp -R src/.vuepress/dist/ temp/
          ls -al
          git config --global user.name 'githubaction'
          git config --global user.email 'githubaction@practera.com'
          git add -A
          git commit -m "deploy docs"
          git push -u origin gh-pages


# ##########################################################
# #  SLACK NOTIFICATION
# ##########################################################       
#       - name: Slack Notification
#         if: always() # Pick up events even if the job fails or is canceled.
#         uses: 8398a7/action-slack@v3
#         env:
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#           MATRIX_CONTEXT: ${{ toJson(matrix) }} # required
#         with:
#           status: ${{ job.status }}
#           author_name: practera-docs
#           mention: 'here'
#           if_mention: failure,cancelled
#           job_name: deploy-to-github-page # Match the name above.
#           fields: repo,commit,eventName,ref,workflow,message,author,job,took
#           custom_payload: |
#             {
#             username: 'GitHub Action CI WorkFlow',
#             icon_emoji: ':github:',
#             attachments: [{
#               color: '${{ job.status }}' === 'success' ? 'good' : ${{ job.status }}' === 'failure' ? 'danger' : 'warning',
#               text:
#              `${process.env.AS_REPO}\n
#               ${process.env.AS_COMMIT}\n
#               ${process.env.AS_EVENT_NAME}\n
#               @${process.env.AS_REF}\n
#               @${process.env.AS_WORKFLOW}\n
#               ${process.env.AS_MESSAGE}\n
#               ${process.env.AS_AUTHOR}\n
#               ${process.env.AS_JOB}\n
#               ${process.env.AS_TOOK}`,
#             }]
#             }
