(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{384:function(e,t,a){"use strict";a.r(t);var s=a(45),h=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"chat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chat"}},[e._v("#")]),e._v(" Chat")]),e._v(" "),a("h2",{attrs:{id:"scheduled-chat-message"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scheduled-chat-message"}},[e._v("#")]),e._v(" Scheduled chat message")]),e._v(" "),a("h3",{attrs:{id:"background"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#background"}},[e._v("#")]),e._v(" Background")]),e._v(" "),a("p",[e._v("We need a way for admin/coordinator to schedule a message to the cohort wide chat channel. It should also be editable.")]),e._v(" "),a("h3",{attrs:{id:"key-logic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-logic"}},[e._v("#")]),e._v(" Key logic")]),e._v(" "),a("ul",[a("li",[e._v("DB change\n"),a("ul",[a("li",[e._v('Add new db fields "scheduled"(datetime), "is_sent"(boolean) to chat log table.')])])]),e._v(" "),a("li",[e._v("Create/update scheduled message\n"),a("ul",[a("li",[e._v('Use the normal create message API, adding a parameter "scheduled" with a datetime string.')]),e._v(" "),a("li",[e._v("Create a new API to update a message, including the scheduled time and the message itself.")])])]),e._v(" "),a("li",[e._v("Cronjob\n"),a("ul",[a("li",[e._v("A cronjob that checks db regularly for every X minutes.")]),e._v(" "),a("li",[e._v('Checks if there are past scheduled message that hasn\'t been sent. If so, change the "is_sent" to true and send the Pusher event.')]),e._v(" "),a("li",[e._v("Send unread chat reminder email to user when there are unread chat messages and he didn’t see it within 10 minutes.")]),e._v(" "),a("li",[e._v("Only send one email to the user before he checks the chat.")])])])]),e._v(" "),a("h3",{attrs:{id:"tasks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tasks"}},[e._v("#")]),e._v(" Tasks")]),e._v(" "),a("ul",[a("li",[e._v('[CORE] Create migration to add field "scheduled", "is_sent" to chat log table.')]),e._v(" "),a("li",[e._v("[Chat API] Able to pass scheduled time when create message.")]),e._v(" "),a("li",[e._v("[Chat API] Filter the chat messages that are scheduled later.")]),e._v(" "),a("li",[e._v("[Chat API] Create API to update a message.")]),e._v(" "),a("li",[e._v("[CORE] New unread chat reminder email (new reminder email logic, send Pusher event if a passed scheduled message hasn’t been sent).")]),e._v(" "),a("li",[e._v("[CUTIE] UI to allow schedule cohort wide message.")])])])}),[],!1,null,null,null);t.default=h.exports}}]);