(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{387:function(e,t,n){"use strict";n.r(t);var i=n(45),a=Object(i.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"engagement-log"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engagement-log"}},[e._v("#")]),e._v(" Engagement log")]),e._v(" "),n("p",[e._v("Engagement log is a feature to track user's engagement in an experience. Finally the data can be exported as a report.")]),e._v(" "),n("h2",{attrs:{id:"tasks"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tasks"}},[e._v("#")]),e._v(" Tasks")]),e._v(" "),n("ol",[n("li",[e._v("Create a new db with a table "),n("code",[e._v("engagement_logs")]),e._v(" with "),n("code",[e._v("id, user_id, timeline_id, date")])]),e._v(" "),n("li",[e._v("Create a new event in "),n("code",[e._v("statistics")]),e._v(" lambda function\n"),n("ul",[n("li",[e._v("It checks if the last engagement log of this user is within 1 hour, if so, ignore the event")]),e._v(" "),n("li",[e._v("It writes the log to the new db table")]),e._v(" "),n("li",[e._v("It marks this user as "),n("code",[e._v("engaged")])])])]),e._v(" "),n("li",[e._v("CORE/GraphQL will invoke this new lambda function event after decoding jwt")]),e._v(" "),n("li",[e._v("Create a new column in enrolment table "),n("code",[e._v("engagement_status")]),e._v(". Valid values are "),n("code",[e._v("uninvited, invited, engaged, disengaged, dropped, deleted")]),e._v(" "),n("ul",[n("li",[e._v("Add the logic to write the status accordingly in CORE")])])]),e._v(" "),n("li",[e._v('On institution/experience setting page, admin can set the engagement period (user is defined as "engaged" if the last log is within X days)')]),e._v(" "),n("li",[e._v("Write a cronjob in the new lambda function to run every day\n"),n("ul",[n("li",[e._v("This cronjob only checks live experiences")]),e._v(" "),n("li",[e._v("Checks every 'engaged' user in an experience, if the user is not engaged anymore, change the status to "),n("code",[e._v("disengaged")])])])])]),e._v(" "),n("h2",{attrs:{id:"engagement-status"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engagement-status"}},[e._v("#")]),e._v(" Engagement status")]),e._v(" "),n("ul",[n("li",[e._v("uninvited\n"),n("ul",[n("li",[e._v("User is enrolled but haven't send invite email")])])]),e._v(" "),n("li",[e._v("invited\n"),n("ul",[n("li",[e._v("Invitation email has sent to the user but user do not have any engagement log")])])]),e._v(" "),n("li",[e._v("engaged\n"),n("ul",[n("li",[e._v("User have engagement log within X days (configured in experience/institution)")])])]),e._v(" "),n("li",[e._v("disengaged\n"),n("ul",[n("li",[e._v("User doesn't have engagement log within X days (configured in experience/institution)")])])]),e._v(" "),n("li",[e._v("dropped\n"),n("ul",[n("li",[e._v("Admin mark the user as dropped")])])]),e._v(" "),n("li",[e._v("deleted\n"),n("ul",[n("li",[e._v("Admin mark the user as deleted")])])])]),e._v(" "),n("h2",{attrs:{id:"questions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#questions"}},[e._v("#")]),e._v(" Questions")]),e._v(" "),n("ol",[n("li",[e._v('Are there any logic to apply for "dropped" user?\n'),n("ol",[n("li",[e._v("Dropped user won't be able to access the experience anymore")]),e._v(" "),n("li",[e._v("Dropped user won't be calculated for engagement/disengagement")])])]),e._v(" "),n("li",[e._v("Where do we export the report? What should the report look like?")])])])}),[],!1,null,null,null);t.default=a.exports}}]);